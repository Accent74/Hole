'#include "HL74_common.avb"
'#include "HL74_ADO.avb"

Option Explicit

'-----------------
'
' набор процедур для обеспечения операций возврата товара от покупателя SQL
'
'	1 - FIFO					
'	2 - LIFO
'	3 - ручной. проверяем только возможность возврата
'	4 - по средней цене
'-----------------

Function ReturnTo(Op, TrNoTo, TrNoFrom, ReturnMode, flWrite, IsViewError, flBalAccount, flAgFrom, BaseAccCode, BaseAccSortMode)
	Dim Errors, MyCoID, aPrm, dSer
	
	MyCoID = WorkArea.MyCompany.ID

	Set Errors = CreateObject("Scripting.Dictionary")
	Set dSer = CreateLibObject("Map")

	If ReturnMode = 3 Then
		ReturnTo = ManualCharge(Op.TransList(TrNoTo), Errors)
	Else
		com_ClearTrans Op.TransList(TrNoTo)
		aPrm = Array(Errors, Op.TransList(TrNoTo), ReturnMode, MyCoID, dSer)
		Op.TransList(TrNoFrom).EnumTrans GetRef("ReturnToOneRow"), aPrm

		ReturnTo = (Errors.Count = 0)
	End If

	If Errors.Count <> 0 And IsViewError Then 
		Set WorkArea.Map.Item("ErrorOp") = Op
		ViewError Errors
	End If

End Function

'---
'	0 - Errors
'	1 - TrListTo
'	2 - ReturnMode
'	3 - MyCo.ID
'---
Function ReturnToOneRow(Tr, ByRef prm)
	Dim aPrm, aData, dSer, sQty, RowNo, Tr2, eQty, eSum, i, SQL

	ReturnToOneRow = True
	RowNo = prm(1).Rows
	If prm(1).Item(RowNo).EntID <> 0 Then RowNo = RowNo + 1
	Set Tr2 = prm(1).Item(RowNo)

	sQty = Abs(Tr.Qty)

	If Tr.EntID <> 0 Then
		Set dSer = prm(4)
		aPrm = Array(Tr2.AccCrID, Tr.AgToID, Tr.EntID, Tr.Date + 1, prm(2), Tr.Operation.ID, prm(3))

		SQL = "parameters AccID28 long, AgFromID long, EntID long, OnDate datetime, Mode long, DocID long, mc long;" & _
			"	select " & _
			"		t.SerName as SerName," & _
			"		t.SerID as SerID," & _
			"		t.SerDate as SerDate," & _
			"		max(t.DateSale) as DateSale," & _
			"		Sum(t.EntSum) as EntSum," & _
			"		Sum(t.EntQty) as EntQty" & _
			"	From (" & _
			"	select" & _
			"			j.SER_ID as SerID," & _
			"			ser_name as SerName," & _
			"			SER_DATE1 as SerDate," & _
			"			j.j_sum as EntSum," & _
			"			j.j_qty as EntQty," & _
			"			j2.j_date as DateSale" & _
			"	FROM (JOURNAL AS j LEFT JOIN JOURNAL AS j2 ON j.DOC_ID = j2.DOC_ID) LEFT JOIN SERIES AS s ON j.SER_ID = s.SER_ID " & _
			"	where " & _
			"		j.j_done = 2" & _
			"		and j.MC_ID = mc" & _
			"		and j.j_date < OnDate" & _
			"		and j.acc_cr in (select id from acc_tree where AccID28 in (id, p0, p1, p2, p3, p4, p5, p6, p7))" & _
			"		and j2.j_tr_no = 0" & _ 
			"		and j2.j_ln_no = 0" & _
			"		and j2.j_ag1 = AgFromID" & _
			"		and j.J_ENT = EntID" & _
			"		and j.DOC_ID <> DocID" & _
			"	union all" & _
			"	select" & _ 
			"			j.SER_ID as SerID," & _
			"			ser_name as SerName," & _
			"			SER_DATE1 as SerDate," & _
			"			j.j_sum as EntSum," & _
			"			j.j_qty as EntQty," & _
			"			j2.j_date as DateSale" & _
			"	FROM (JOURNAL AS j LEFT JOIN JOURNAL AS j2 ON j.DOC_ID = j2.DOC_ID) LEFT JOIN SERIES AS s ON j.SER_ID = s.SER_ID" & _
			"	where " & _
			"		j.j_done = 2" & _
			"		and j.MC_ID = mc" & _
			"		and j.j_date < OnDate" & _
			"		and j.acc_db in (select id from acc_tree where AccID28 in (id, p0, p1, p2, p3, p4, p5, p6, p7))" & _
			"		and j2.j_tr_no = 0 " & _
			"		and j2.j_ln_no = 0" & _
			"		and j2.j_ag2 = AgFromID" & _
			"		and j.J_ENT = EntID" & _
			"		and j.DOC_ID <> DocID" & _
			"	) as T" & _
			"	group by" & _ 
			"		t.SErID," & _
			"		t.sername," & _
			"		t.SerDate" & _
			"	having " & _
			"		sum(t.EntSum) <> 0 or " & _
			"		sum(t.EntQty) <> 0" & _
			"	order by " & _
			"		max(t.DateSale)"

		If Query(SQL, aPrm, aData) Then
			'	0 - наименование серии
			'	1 - ID серии
			'	2 - дата серии
			'	3 - последняя дата продажи
			'	4 - сумма по серии
			'	5 - количество по серии

			For i = 0 To UBound(aData, 2)	
				If dSer.Exists(aData(1, i)) Then
					eSum = dSer(aData(1, i))(0)
					eQty = dSer(aData(1, i))(1)
				Else
					eSum = aData(4, i)
					eQty = aData(5, i)
					dSer(aData(1, i)) = Array(eSum, eQty)
				End If

				If eQty > 0 Then
					If prm(1).Item(RowNo).EntID <> 0 Then RowNo = RowNo + 1
					Set Tr2 = prm(1).Item(RowNo)

					Tr2.EntID = Tr.EntID
					Tr2.SeriesID = aData(1, i)
				
					If sQty >= eQty Then
						Tr2.Qty = -eQty
						Tr2.Sum = -eSum
						sQty = sQty - eQty
						eQty = 0
						eSum = 0
					Else
						Tr2.Qty = sQty
						Tr2.Price = eSum / eQty
						eQty = eQty - sQty
						eSum = eSum - Abs(Tr.Sum)
						sQty = 0
					End If

					dSer(aData(1, i))(0) = eSum
					dSer(aData(1, i))(1) = eQty
				End If

				If sQty = 0 Then Exit For
			Next

			If sQty <> 0 Then
				' недостаточно количества на остатке
				prm(0).Add prm(0).Count + 1, Array(acErrorNoQuant, Tr.EntID, sQty, Tr.RowNo2, Tr2.AccCrID, Tr.AgToID)
			End If
			
		Else
			prm(0).Add prm(0).Count + 1, Array(acErrorNoSeries, Tr.EntID, sQty, Tr.RowNo2, Tr2.AccCrID, Tr.AgToID)
		End If
	End If
	
End Function
'---
'
'---
Function ManualCharge(TrListTo, Errors)
	Dim aPrm, dEnts

	Set dEnts = CreateObject("Scripting.Dictionary")
	aPrm = Array(True, dEnts, Errors, TrListTo.Parent.Trans(1).AgToID)

	TrListTo.EnumTrans GetRef("CheckSerOneRow"), aPrm
	ManualCharge = (Errors.Count = 0)
End Function
'---
'
'---
Function CheckSerOneRow(Tr, ByRef prm)
	Dim aPrm, SerQty, aData, SerID, SQL

	CheckSerOneRow = True

	If Tr.SeriesID <> 0 Then
		SerID = Tr.SeriesID
		aPrm = Array(Tr.AccCrID, prm(3), Tr.EntID, SerID, Tr.Date + 1, Tr.Operation.ID)

		If prm(1).Exists(SerID) Then
			SerQty = prm(1)(SerID)
		Else
			SQL = "parameters AccID28 long, AgFromID long, EntID long, SerID long, OnDate datetime, Mode long, DocID long, mc long; " & _
			"	Select  " & _
			"		Sum(t.EntQty) as EntQty " & _
			"	From ( " & _
			"	Select " & _ 
			"			j.j_qty as EntQty " & _
			"	from journal as j " & _
			"		Left Join journal as j2 On j2.doc_id = j.doc_id " & _
			"	where " & _ 
			"		j.j_done = 2 " & _
			"		And j.MC_ID = mc " & _
			"		And j.j_date < OnDate " & _
			"		And j.acc_cr In (Select id from acc_tree where AccID28 In (id, p0, p1, p2, p3, p4, p5, p6, p7)) " & _
			"		And j2.j_tr_no = 0  " & _
			"		And j2.j_ln_no = 0 " & _
			"		And j2.j_ag1 = AgFromID " & _
			"		And j.J_ENT = EntID " & _
			"		And j.ser_id = SerID " & _
			"		And j.DOC_ID <> DocID " & _
			"	union all " & _
			"	Select " & _ 
			"			j.j_qty as EntQty " & _
			"	from journal j " & _
			"		Left Join journal as j2 On j2.doc_id = j.doc_id " & _
			"	where  " & _
			"		j.j_done = 2 " & _
			"		And j.MC_ID = mc " & _
			"		And j.j_date < OnDate " & _
			"		And j.acc_db In (Select id from acc_tree where AccID28 In (id, p0, p1, p2, p3, p4, p5, p6, p7)) " & _
			"		And j2.j_tr_no = 0 " & _ 
			"		And j2.j_ln_no = 0 " & _
			"		And j2.j_ag2 = AgFromID " & _
			"		And j.J_ENT = EntID " & _
			"		And j.DOC_ID <> DocID " & _
			"		And j.ser_id = SerID " & _
			"	) as T " & _
			"	having " & _ 
			"		sum(t.EntQty) <> 0 "

			If Query("HL74_ReturnFromBuyerSeries", aPrm, aData) Then
				SerQty = aData(0, 0)
				prm(1)(SerID) = SerQty
			Else
				prm(2).Add prm(2).Count + 1, Array(acErrorNoSeries, Tr.EntID, Abs(Tr.Qty), Tr.RowNo2, Tr.AccCrID, prm(3))
				Exit Function
			End If
		End If

		If SerQty < Abs(Tr.Qty) Then
			prm(2).Add prm(2).Count + 1, Array(acErrorNoQtySeries, Tr.EntID, SerQty, Tr.RowNo2, Tr.AccCrID, prm(3))
		Else
			prm(1)(SerID) = SerQty - Abs(Tr.Qty)
		End If
	Else
		prm(2).Add prm(2).Count + 1, Array(acErrorNoSeries, Tr.EntID, Abs(Tr.Qty), Tr.RowNo2, Tr.AccCrID, prm(3))
	End If

End Function
'---
'
'---

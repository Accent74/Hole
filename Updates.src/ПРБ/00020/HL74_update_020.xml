<AccentExportData>
	<AccentOperations/>
	<AccentFolders/>
	<AccentTemplates/>
	<AccentEntities/>
	<AccentMiscs/>
	<AccentAgents/>
	<AccentBanks/>
	<AccentAccounts/>
	<AccentUnits/>
	<AccentCurs/>
	<AccentForms/>
	<AccentAutoNum/>
	<AccentEnums/>
	<AccentWorkarea>
		<scripts configversion="019" configname="ПРБ" configdate="31/03/2018">
	
			<query type="OLEDB" name="" cmd="exec">
				IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'ST74_CalcEntRestSubAcc')
					drop procedure ST74_CalcEntRestSubAcc
			</query>
			<query type="OLEDB" name="" cmd="exec">
				CREATE PROCEDURE [dbo].[ST74_CalcEntRestSubAcc]
						   @AgID Int, 
						   @AccID Int, 
						   @DocID Int, 
						   @OnDate DateTime, 
						   @MC int

						AS
						SET NOCOUNT ON

						select id
						into #acctree
						from acc_tree
						where @Accid in (id, p0, p1, p2, p3, p4, p5, p6, p7)

						create table #agtree(id int)

						if @AgID &lt; 0 
							insert into #agtree(id)
							select id
							from ag_tree
							where -@AgID in (id, p0, p1, p2, p3, p4, p5, p6, p7)
						else
							insert into #agtree(id)
							select @AgID
					
						---
						--- Создаем временную таблицу для выборки объектов в разрезе серий
						---
						CREATE TABLE #Ent(EntID int, RestQty Money, RestSum Money)

						--вставляем дебет (с плюсами)
						INSERT INTO #Ent (EntID, RestQty, RestSum)
						SELECT J_ent, 
							sum(IsNull(J_QTY, 0)),
							sum(J_SUM)

						FROM JOURNAL
						WHERE JOURNAL.ACC_DB in (select id from #acctree)
								AND JOURNAL.J_AG1 in (select ID from #agtree) 
								and JOURNAL.J_DONE=2
								AND (doc_id&lt;&gt;@DocID) 
								AND (JOURNAL.J_DATE&lt;=@OnDate) 
								and JOURNAL.MC_ID = @MC
						group by J_ent
						--вставляем кредит (с минусами)
						INSERT INTO #Ent (EntID, RestQty, RestSum)

						SELECT J_ent, 
							sum(IsNull(-J_QTY, 0)),
							sum(-J_SUM)

						FROM JOURNAL
						WHERE	JOURNAL.ACC_CR in (select id from #acctree)
								AND JOURNAL.J_AG2 in (select ID from #agtree) 
								and JOURNAL.J_DONE=2
								AND (doc_id&lt;&gt;@DocID) 
								AND (JOURNAL.J_DATE&lt;=@OnDate) 
								and JOURNAL.MC_ID = @MC
						group by J_ent
						--Окончательная выборка
						SELECT	0, 
								EntID, 
								Sum(RestQty) AS RestQty, 
								Sum (RestSum) AS RestSum
						FROM #Ent 
						group by EntID
						HAVING Sum(RestQty)&lt;&gt;0 or Sum(RestSum)&lt;&gt;0 

						drop table #Ent, #acctree, #agtree

						GRANT EXECUTE ON ST74_CalcEntRestSubAcc TO ap_public
		</query>
		<query type="OLEDB" name="" cmd="exec">
			IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'ST74_CRReportCurs')
			drop procedure ST74_CRReportCurs
		</query>
		<query type="OLEDB" name="" cmd="exec">
			CREATE procedure [dbo].[ST74_CRReportCurs] 
				@AccID int,
				@CursID int,
				@dEnd datetime,
				@mc int
			as
				set nocount on

				--- с учетом субсчетов
				select id
				into #Acc
				from acc_tree
				where @AccID in (id, p0, p1, p2, p3, p4, p5, p6, p7)

				--- результирующая таблица
				create table #report (AgID int, TotalSum money, DocID int, DocDate datetime, DocNo nvarchar(50), DocSum money, PayDate datetime)

				--- выбрали кредиторку. только задолженности по поставщикам
				select	j_ag1 as AgID, 
						sum(JC_SUM) as TotalSum
				into #JO6
				from journal j with (nolock) 
					left join JRN_CRC jc on jc.J_ID = j.J_ID
				where
					j_done = 2 and MC_ID = @mc 
					and j_date &lt; @dEnd
					and acc_db in (select  id from #Acc)
					and jc.CRC_ID = @CursID
				group by j_ag1
				
				insert into #JO6 (AgID, TotalSum)
				select	j_ag2, 
						-sum(JC_SUM)
				from 	journal j with (nolock) 
					left join JRN_CRC jc on jc.J_ID = j.J_ID
				where
					j_done = 2 and MC_ID = @mc 
					and j_date &lt; @dEnd
					and acc_cr in (select  id from #Acc)
					and jc.CRC_ID = @CursID
				group by j_ag2

				--- курсор по все записям дебиторки
				declare @AgID int, @AgSum Money
				declare DocList cursor for

					select #JO6.AgID, 
						-Sum(#JO6.TotalSum)
					from #JO6 with (nolock) 
					Group by #JO6.AgID
					Having Sum(#JO6.TotalSum) &lt; 0

				open DocList

				fetch next From DocList into @AgID, @AgSum

				while @@FETCH_STATUS = 0
					begin
						declare @DocID int, 
								@DocDate datetime, 
								@DocNo nvarchar(50),
								@DocSum money,
								@PayDate datetime,
								@PaySum money = 0,
								@TotalSum money = 0

						--- выбрали все документы по покупателю до даты отчета
						declare AgDocList cursor for
							select j.doc_id, 
									doc_date, 
									doc_no, 
									sum(jc.jc_sum), 
									isnull(doc_pd3, doc_date) 
							from journal j with (nolock)
								left join documents d on d.doc_id = j.doc_id
								left join JRN_CRC jc on jc.J_ID = j.J_ID
							where j_ag2 = @AgID
								and acc_cr in (select  id from #Acc)
								and not acc_db in (select  id from #Acc)
								and j_done = 2
								and j.mc_id = @mc 
								and d.doc_date &lt; @dEnd 
								and jc.CRC_ID = @CursID
							group by j.doc_id, doc_date, doc_no, isnull(doc_pd3, doc_date)
							having sum(jc.jc_sum) &gt; 0
							order by isnull(doc_pd3, doc_date) desc, doc_no desc

						open AgDocList
						fetch next from AgDocList
						into @DocID, @DocDate, @DocNo, @DocSum, @PayDate

						--- макс сумма задолженности (для расчетов)
						set @TotalSum = @AgSum

						insert into #report (AgID, DocID, TotalSum) values (@AgID, 0, @AgSum)

						--- по всем документам от конца пока не выбрали всю сумму
						while @@FETCH_STATUS = 0 and @TotalSum &gt; 0
							begin
								--- если остаток суммы &lt; суммы по документу, то делаем сумму задолженности == остатку
								if @TotalSum &lt; @DocSum
									set @DocSum = @TotalSum

								--- уменьшили сумму задолженности на сумму документа
								set @TotalSum = @TotalSum - @DocSum
								
								insert into #report (AgID, TotalSum, DocID, DocDate, DocNo, DocSum, PayDate) values
												(@AgID, 0, @DocID, @DocDate, @DocNo, @DocSum, @PayDate)
								fetch next from AgDocList
								into @DocID, @DocDate, @DocNo, @DocSum, @PayDate
							end

						close AgDocList
						deallocate AgDocList

						fetch next From DocList into @AgID, @AgSum
					end

				close DocList
				deallocate DocList

				select AgID, Ag_Code, Ag_NAME, TotalSum, DocID, DocDate, DocNo, DocSum, PayDate
				from #report
					left join AGENTS on ag_id = AgID
				order by Ag_Name, AgID, DocDate, DocID, DocNo, PayDate

				drop table #report, #JO6, #Acc

				GRANT EXECUTE ON ST74_CRReportCurs TO ap_public
		</query>

		</scripts>
	</AccentWorkarea>
</AccentExportData>

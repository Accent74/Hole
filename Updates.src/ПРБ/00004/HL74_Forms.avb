'---
' модуль стандартных переменных и функций дл€ форм
'---
Option Explicit

Dim MyCo
Dim TmlArray		' массив ID шаблонов, на основе которых может быть создана нова€ ’ќ
Dim Op 					' текуща€ операци€
Dim DefPrice		' прайс лист по умолчанию
Dim AgreeMscNo		'	номер аналитики договора
Dim ExMap 			' ћар дл€ работы с дополнительными данными

'---
'
'---
Function Form_SelectTemplate(Op, Form)
	Form_SelectTemplate = False

	If MsgBox("ƒокумент не проведен в учете. ѕровести по типовому шаблону ?",_
						vbYesNo + vbExclamation, "¬нимание !") = vbYes	Then 
		If Op.BrowseTemplate(7) Then
			Form_SetCaption Op, Form
			Form_SelectTemplate = True
		End If
	End If	
End Function
'---
'
'---
Function Form_Save(Op, Form)
	Dim Cancel

	If Op.IsNew Then
		Op.String2 = workarea.dbuser
	Else
		Op.String2 = token(Op.String2, 1, "/") & "/" & workarea.dbuser
	End If

	With Op.Trans(1)
		Op.String1 = .AgFromBind.name & " -> " & .AgToBind.Name
	End With

	Op.LockDate = True
	Op.SetDate Op.Date

	Op.Done = True

	' если провести хоз€йственную операцию невозможно, то необходимо запросить проведение у пользовател€
	If Op.TemplateID = 0 Then Call Form_SelectTemplate(Op, Form)
	If Op.DocNo = "" Then Op.AutoNum

	Cancel = False

	With Op.TemplateInvoker2
		.FireBeforeSave Cancel
		.FireOnRecalc
	End With

	If Not op.Save(4) Then
		MsgBox "ƒокумент не сохранен", vbExclamation, Op.Name
		Form_Save = False
	Else
		Form_Save = True
	End If
End Function
'---------------------------------------------------
' установка заголовка формы по имени шаблона
'---------------------------------------------------
Sub Form_SetCaption(Op, Form)
	' если есть шаблон, то установим заголовок формы
	If op.TemplateID <> 0 Then
		Form.Caption = Workarea.Template(op.TemplateID).Name
	End If
End Sub
'--------
'
'--------
Function Form_GetCurrentOperation(Obj, ByRef flModified)
	Dim CurrentOp

	With WorkArea.Map
		If .Exists(mapWACurrentOperation) Then
			Set Form_GetCurrentOperation = .Item(mapWACurrentOperation)
			.Remove(mapWACurrentOperation)
			flModified = True
		Else
			' текуща€ операци€
			Set CurrentOp = Obj.CurrentOperation

			If CurrentOp.IsNew Then 
				CurrentOp.Date = Workarea.LastDocDate
			End If

		 	Set Form_GetCurrentOperation = CurrentOp
			flModified = False
		End If
	End With
End Function
'--------
'
'--------
Sub Form_PrepareNewButton(ByRef TmlArray, Op, ToolBarButton)
	Dim ComboString
	Dim Tml
	Dim i
	Dim n

	TmlArray = Array()
	ComboString = "1: опи€ текущего:100|1:-"

	If Op.TemplateID <> 0 Then
		Set Tml = WorkArea.Template(Op.TemplateID).Linked(False)

		' ограничиваем количество шаблонов 99-ю из-за ограничени€ PopUp
		n = IIF(Tml.Count > 99, 99, Tml.Count)

		For i = 1 To n
			With Tml.Item(i)
				If .Type <> 0 Then
					ComboString = ComboString & "|" 
					ReDim Preserve TmlArray(UBound(TmlArray) + 1)
					TmlArray(UBound(TmlArray)) = .ID
					ComboString = ComboString & "1: " & .Name & ":1" & IIF(i < 10, "0", "") & CStr(i)
				End If
			End With
		Next
	End If
	
	ToolBarButton.PopUp = ComboString

End Sub
'--------
'
'--------
Sub Form_LoadFirmPicture(frmPicture, FileName)
	Dim RD

	If IsFileExists(FileName) Then
		Set RD = CreateLibObject("Redirect")
		Set frmPicture.Picture = LoadPicture(RD.GetFullPath(FileName))
	Else
		Set frmPicture.Picture = Nothing
	End If
		
End Sub
'--------
'
'--------
Sub Form_LoadPriceList(Ag1, Ag2)
	Dim PrListID

	PrListID = 0

	With Op.Trans(1)
		If Not Ag1 Is Nothing Then PrListID = SetAgPriceList(Ag1)
		If PrListID = 0 And Not Ag2 Is Nothing Then PrListID = SetAgPriceList(Ag2)
		If PrListID = 0 Then PrListID = SetAgPriceList(MyCo)

		If PrListID = 0 Then 
			Set DefPrice = Nothing
		Else
			Set DefPrice = WorkArea.PriceKind(PrListID)
		End If
	End With
End Sub
'------------------
'
'------------------
Function SetAgPriceList(Ag)
	With Ag.Params
		If .Exists(prmAgDefPrice) Then
			SetAgPriceList = .Item(prmAgDefPrice).Value2
		Else
			SetAgPriceList = 0
		End If
	End With
End Function
'--------
'
'--------
Function Form_GetMscNoByDBPrm(prmNameDB)
	Dim MscID
	Dim Msc

	Form_GetMscNoByDBPrm = 0

	With workarea.Params
		If .Exists(prmNameDB) Then
			MscID = workarea.Params(prmNameDB).Value2

			If MscID <> 0 Then
				Set Msc = WorkArea.Misc(MscID)
				Form_GetMscNoByDBPrm = Msc.MscNo
			End If

		End If
	End With
End Function
'--------
'
'--------
Sub Form_MakeCopyDoc(Op, RefSaveOperation)
	Dim NewOp
	Dim Cancel

	Cancel = False
	Op.CanClose RefSaveOperation, Cancel

	If Not Cancel Then
		Set NewOp = Op.Clone(1 + 2 + 4)

		With NewOp.TemplateInvoker2
			.FireOnApply
			.FireAll
		End With

		Set Op = Nothing
		Set Op = NewOp
	End If
	
End Sub
'--------
'
'--------
Sub Form_MakeNewDoc(Op, RefSaveOperation)
	Dim NewOp
	Dim Cancel

	Cancel = False
	Op.CanClose RefSaveOperation, Cancel

	If Not Cancel Then
		Set NewOp = Workarea.CreateOperation
		NewOp.TemplateID = Op.TemplateID

		With NewOp.TemplateInvoker2
			.FireOnApply
			.FireAll
		End With

		NewOp.Date = Op.Date
		NewOp.DocNo = ""

		Set Op = Nothing
		Set Op = NewOp
	End If

End Sub
'--------
'
'--------
Sub Form_CopyDocByTML(Op, TmlID, RefAfterCopy, MakeLink, RefSAveOperation)
	Dim NewOp, DocID
	Dim NewForm
	Dim Sum, Cancel

	Set NewOp = Op.Clone(1 + 2 + 4)

	With NewOp
		.Name = ""
		.DocNo = ""
		.String1 = ""
		.String2 = ""
		.String3 = ""
		.TransCount = 1
		.TemplateID = TmlID

		With .TemplateInvoker2
			.FireOnApply
			.FireAll
		End With

		If RefAfterCopy(Op, NewOp) Then

			If MakeLink Then
				Cancel = False
				Op.CanClose RefSaveOperation, Cancel
				DocID = Op.ID

				If DocID <> 0 Then
					NewOp.TransList(1).EnumTrans GetRef("SetParentDocIDRow"), DocID
					NewOp.Link DocID
				End If
			End If

			WorkArea.Map.Item(mapWACurrentOperation) = NewOp
			Set NewForm = App.CreateForm(.FormID)
		End If

	End With
End Sub
'--------
'
'--------
Function SetParentDocIDRow(Tr, ByRef DocID)
	SetParentDocIDRow = True
	Tr.ParentDocID = DocID
End Function
'--------
'
'--------
Function Form_GetEntName(Ent)
	If Ent Is Nothing Then 
		Form_GetEntName = ""
	Else
		With Ent.Params
			Form_GetEntName = Ent.Name

			If .Exists(prmEntAlterName) Then
				If .Item(prmEntAlterName).Value2 <> "" Then
					Form_GetEntName = .Item(prmEntAlterName).Value2
				End If
			End If
		End With
	End If
End Function
'--------
'
'--------
Sub Form_StabilizeGrid(sGrd, Tr)
	Dim Rows

	Rows = Tr.Rows
	If Tr.Item(Rows).EntID = 0 Then Rows = Rows - 1
	sGrd.Rows = Rows

End Sub
'--------
'
'--------
Sub Form_StabilizeGrid2(sGrd)
	sGrd.PackAutoGrow
	sGrd.CalcAutoHeight
End Sub
'--------
'
'--------
Function Form_GetAgreeName(Tr, AgreeMscNo)
	If tr.MiscID(AgreeMscNo) <> 0 Then
		With Tr.MiscBind(AgreeMscNo)
			Form_GetAgreeName = " є " & .String1 &  " от " & formatdate2(.Date1, "dd/mm/yyyy")
		End With
	Else
		Form_GetAgreeName = ""
	End If

End Function
'----
'
'----
Sub SetGRangeMerge(sgrdRange, SetMerge, SetType)
	If Not sgrdRange.MergeCells And SetMerge Then
		sgrdRange.MergeCells = True
	ElseIf sgrdRange.MergeCells And Not SetMerge Then
		sgrdRange.MergeCells = False
		sgrdRange.CellDataType = SetType
	End If

	If sgrdRange = vbCurrency Then
		sgrdRange.Format = "(&s)"
	End If
End Sub
'----
'
'----
Sub Form_AddTax(TrList)
	Dim i
	Dim Qty

	For i = 1 To TrList.Rows
		With TrList.Item(i)
			If .Price <> 0 Then .Sum = Round2( .Price * 5 / 6 * .Qty, 2 )
		End With
	Next

End Sub
'----
'
'----
Function GetEntityBalAcc(Ent)
	If Ent Is Nothing Then
		GetEntityBalAcc = 0
	ElseIf Ent.AccID <> 0 Then
		GetEntityBalAcc = Ent.AccID
	ElseIf Ent.Parent Is Nothing Then
		GetEntityBalAcc = 0
	Else
		GetEntityBalAcc = GetEntityBalAcc(Ent.Parent)
	End If
End Function
'----
'
'----
Sub Form_SetColumnText(SetupPage, i, Title)
	Select Case i
		Case 0
			SetupPage.LeftHeader = Title
		Case 1
			SetupPage.CenterHeader = Title
		Case 2
			SetupPage.RightHeader = Title
		Case 3
			SetupPage.LeftFooter = Title
		Case 4
			SetupPage.CenterFooter = Title
		Case 5
			SetupPage.RightFooter = Title
	End Select
End Sub
'----
'
'----
Sub Form_SetupColTitles(ItemParams, SetupPage)
	Dim aTitles, Title
	Dim Titles, i

	If ItemParams.Exists(prmFormColontiTles) Then
		Titles = ItemParams.Item(prmFormColontiTles).Value2

		If Titles <> "" Then

			aTitles = Split(Titles, ";")

			For i = 0 To UBound(aTitles)
				Title = aTitles(i)

				If Title <> "" Then
					Title = Replace(Title, Chr(34), "'")
					Form_SetColumnText SetupPage, i, Title
				End If
			Next
		End If
	End If
End Sub
'----
'
'----
Sub Form_SetupColTitleMargin(ItemParam, SetupPage)
	Dim aMargins, Margin
	Dim Margins, i

	If ItemParam.Exists(prmFormMargin) Then
		Margins = ItemParam.Item(prmFormMargin).Value2

		If Margins <> "" Then
			aMargins = Split(Margins, ";")
	
			For i = 0 To UBound(aMargins)
				Margin = aMargins(i)
				If Margin <> "" Then
					If IsNumeric(Margin) Then
						If i = 1 Then
							SetupPage.HeaderMargin = Margin
						Else
							SetupPage.FooterMargin = Margin
						End If
					End If
				End If
			Next

		End If
	End If
End Sub
'----
'
'----
Sub Form_SetupPtintMargins(ItemParams, SetupPage)
	Dim aTitles, Title
	Dim Titles, i

	If ItemParams.Exists(prmFormColontiTles) Then
		Titles = ItemParams.Item(prmFormColontiTles).Value2

		If Titles <> "" Then
			aTitles = Split(Titles, ";")

			For i = 0 To UBound(aTitles)
				Title = aTitles(i)

				If Title <> "" Then
					If IsNumeric(Title) Then
						Title = Replace(Title, Chr(34), "'")
						Form_SetColumnText SetupPage, i, Title
					End If
				End If
			Next
		End If
	End If

End Sub
'----
'
'----
Sub Form_PageSetUp(FormID, Form)
	Dim pItem,SetupPage

	If FormID <> 0 Then
		Set pItem = Workarea.ProjectItem(FormID)
		Set SetupPage = Form.ActivePage.PageSetup

		With pItem.Params
			Form_SetupColTitles pItem.Params, SetupPage
			Form_SetupColTitleMargin pItem.Params, SetupPage
			Form_SetupPtintMargins pItem.Params, SetupPage
		End With
		
	End If
End Sub
'------------------
'
'------------------
Sub Form_ActivateHelp(Mode, Command, Control, HelpFileName, FormID)
	Dim WinAPi
	Dim FormFileName
	Dim aCommand

	FormFileName = WorkArea.ProjectItem(FormID).FileName
	If InStrRev(FormFileName, "\") > 0 Then FormFileName = Mid(FormFileName, InStrRev(FormFileName, "\") + 1)
	If InStrRev(FormFileName, ".") > 1 Then FormFileName = Left(FormFileName, InStrRev(FormFileName, ".") - 1)
	FormFileName = FormFileName & ".htm"

	Set WinAPi = CreateLibObject("WinAPI")

	Select Case Mode
		Case 1, 2
			FormFileName = FormFileName & "#" & Control
		Case 3
			FormFileName = FormFileName & "#btnPrint"
		Case 4
			aCommand = Array("btnSaveOperation", "btnPrint", "btnTransProps", "btnClose")
			FormFileName = FormFileName & "#" & aCommand(Command - 1)
	End Select

	WinAPi.HTMLHelp HelpFileName, 0, FormFileName

End Sub
'----
'
'----
Function Form_GetAgAddress(Ag)
	If Not Ag Is Nothing Then
		Form_GetAgAddress = iif(Ag.Country <> "", Ag.Country & ", ", "") & Replace(Ag.Address, ";", " ")
	Else
		Form_GetAgAddress = ""
	End If
End Function

'----
'
'----
Function Form_GetAgDetails(Ag)
	Dim AgDetails, BankAcc

	If Ag Is Nothing Then 
		Form_GetAgDetails = ""
	Else
		AgDetails = "ќ ѕќ: " & Ag.Code 
		If Ag.Address <> "" Then AgDetails = AgDetails & " јдрес: " & Form_GetAgAddress(Ag)
		If Ag.Phone <> "" Then AgDetails = AgDetails & " тел.: " & Ag.Phone

		With Ag.BankAccounts
			If .Count > 0 Then
				With .Item(1)
					AgDetails = AgDetails & " р/с: " & .AccountNo
					AgDetails = AgDetails & " в " & .Bank.Name
					AgDetails = AgDetails & " ћ‘ќ " & .Bank.Code
					AgDetails = AgDetails & " г. " & .Bank.City
				End With
			End If
		End With
	End If

	Form_GetAgDetails = AgDetails

End Function
'----
'
'----
Function Form_On_PopUp(Op, Form, TmlArray, Command, RefSaveOperation, RefAfterCopy, MakeLink)
	Form_On_PopUp = True

	Select Case Command
		Case 401	'	выбрать типовой шаблон и отработать его код
			If Op.BrowseTemplate(1 + 2 + 4) Then 
				Form_SetCaption Op, Form
				TmlArray = Array()
				Form_PrepareNewButton TmlArray, Op, Form.ToolBar.ItemByCommand(5)
			End If
		Case 301 	'	просмотр 1-го экземпл€ра
			Form.Print True
		Case 302	'	печать 1-го экземпл€ра
			Form.Preview
		Case 100	' создать новый документ
			Form_MakeCopyDoc Op, RefSaveOperation
		Case Else
			If Command > 100 And Command < 200 Then 
				Form_CopyDocByTML Op, tmlArray(Command - 101), RefAfterCopy, MakeLink, RefSaveOperation
			Else	
				Form_On_PopUp = False
			End If
	End Select
End Function
'----
'
'----
Function Form_GetParentDocName(PDocID)
	Dim POp

	If PDocID = 0 Then
		Form_GetParentDocName = ""
	Else
		Set POp = Workarea.Operation(PDocID)
		Form_GetParentDocName = iif(POp.DocNo = "", "б/н", "є " & POp.DocNo) & " " & formatdate2(POp.Date, "dd/mm/yyyy")
	End If
End Function
'---
'
'---
Function Form_GetAgAlterName(Ag, OnDate)
	Dim AgAlterName

	AgAlterName = ""

	If Not Ag Is Nothing Then
		If Ag.Params.Exists(prmAgAlterName) Then
			AgAlterName = Ag.Params(prmAgAlterName).Value2
		ElseIf Ag.Facts.Exists(fctAgAlterName) Then
			AgAlterName = Ag.Facts(Ondate).Item(fctAgAlterName).Value2
		End If

		If AgAlterName = "" Then
			AgAlterName = Ag.Name
		End If

	End If

	Form_GetAgAlterName = AgAlterName
	
End Function
'---
'
'---
Function Form_GetAgAccount(Ag)
	Dim AgDetails

	AgDetails = ""

	If Not Ag Is Nothing Then
		With Ag.BankAccounts
			If .Count > 0 Then
				With .Item(1)
					AgDetails = .AccountNo
					AgDetails = AgDetails & " в " & .Bank.Name
					AgDetails = AgDetails & " ћ‘ќ " & .Bank.Code
					AgDetails = AgDetails & " г. " & .Bank.City
				End With
			End If
		End With
	End If

	Form_GetAgAccount = AgDetails
End Function
'---
'
'---
Sub Form_SaveExtData(Op, aAg, ExMap)
	Dim i, Row
	
	For i = 0 To UBound(aAg)
		Row = i + 1
		ExMap("Ag" & Row & "ID") = aAg(i).ID
		ExMap("Ag" & Row & "Name") = aAg(i).Name
	Next
	
	Op.SetExtraData ExMap.XML
End Sub
'---
'
'---
Sub Form_SaveExtData2(Op, ElemKind, aElem, ExMap, IsSave)
	Dim i, Row
	
	For i = 0 To UBound(aElem)
		Row = i + 1
		ExMap(ElemKind & Row & "ID") = aElem(i).ID
		ExMap(ElemKind & Row & "Name") = aElem(i).Name
	Next

	If IsSave Then Op.SetExtraData ExMap.XML
End Sub
'---
'
'---
Sub Form_LoadElems(Op, ElemKind, aElems, aSel, ExMap)
	Dim ExData, Elem, i, Row

	If Not Op.IsNew Then
		ExData = Op.GetExtraData

		If ExData <> "" Then
			ExMap.XML = ExData
		End If
	End If

	For i = 0 To UBound(aElems)
		Row = i + 1
		Set aElems(i).Selector = aSel(i)
		aElems(i).ID = ExMap(ElemKind & Row & "ID")
		If aElems(i).Name = "" Then aElems(i).Name = ExMap(ElemKind & Row & "Name")
	Next

End Sub

'---
'
'---
Sub Form_LoadAgents(Op, aAgs, aSel, ExMap)
	Dim ExData, Ag, i, Row

	If Not Op.IsNew Then
		ExData = Op.GetExtraData

		If ExData <> "" Then
			ExMap.XML = ExData
		End If
	End If

	For i = 0 To UBound(aAgs)
		Row = i + 1
		Set aAgs(i).Selector = aSel(i)
		aAgs(i).ID = ExMap("Ag" & Row & "ID")
		If aAgs(i).Name = "" Then aAgs(i).Name = ExMap("Ag" & Row & "Name")
	Next

End Sub
'---
'
'---
Sub Form_sgrd_setrealrows(TrList, sgrd)
	Dim Rows

	Rows = TrList.Rows

	If Rows > 1 And TrList.Item(Rows).EntID = 0 Then Rows = Rows - 1
	sgrd.Rows = Rows
	sgrd.CalcAutoHeight
End Sub
'---
'
'---
Sub Form_ClearCurr(Tr, Lock)
	With Tr.TransCurs(1)
		.CurID = 1
		.LockRate = Lock
		.Rate = 1
	End With
End Sub
'---
'
'---
Sub Form_SavePrice(TrList)
	If DefPrice Is Nothing  Then Exit Sub
	TrList.EnumTrans GetRef("Form_SetPriceRow"), DefPrice
End Sub
'---
'
'---
Function Form_SetPriceRow(Tr, ByRef DefPrice)
	Form_SetPriceRow = True

	If Tr.EntID <> 0 Then
		DefPrice.SetEntPrice Tr.EntID, Tr.Date, Tr.Params(prmTrPrice).Value2, Workarea.DefPriceList
	End If

End Function
'---
'
'---
Sub Form_SetCurByAcc(TrList, IsCash, IsDb)
	Dim prmName, AccList, i, aAccList, Acc, CurID, AccID

	prmName = iif(IsCash, "CASH_ACC", "BANK_ACC")
	AccList = com_GetSysParams(prmName)
	CurID = TrList.Item(1).TransCurs(1).CurID

	If AccList <> "" Then
		aAccList = Split(AccList, ",")

		For i = 0 To UBound(aAccList)
			AccID = CLng(Trim(aAccList(i)))

			Set Acc = Workarea.Account(AccID)

			If Not Acc Is Nothing Then 
				If Acc.Params(prmAccCurrency).Value2 = CurID Then
					If IsDb Then
						TrList.SetAccDB AccID
					Else
						TrList.SetAccCR AccID
					End If
					Exit Sub
				End If
			End If
		Next
	End If

End Sub
'---
'
'---
Function Form_GetEntCode(Tr)
	Dim EntCode

	EntCode = Tr.Params(prmTrCode).Value2

	If EntCode <> "" Then 
		Form_GetEntCode = EntCode
	Else
		Form_GetEntCode = Tr.EntBind.Bar
	End If

End Function

'---
'
'---

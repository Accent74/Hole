'#include "HL74_ADO.avb"
'#include "HL74_Common.avb"
' 18/12/2018	- добавил возможность печатать данные по цене и сумме из параметров. для печати цен со скидкой


Option Explicit

'	prmPrinter
'	0	- 	Msc
'	1 	-	кассир
'	2	-	пароль кассира
'	3 	-	прочее, если нужно

'	prmData для печати чеков
'	0 	-	операция
'	1	-	номер проводки
'	2	-	тип платежа

'	prmData для печати отчетов 
'	0	-	вид отчета
'	1	-	тип отчета (сокращенный или развернутый)
'	2	-	выводить полный период
'	3	-	начало периода
'	4	-	конец периода
'	5	-	начальный номер
'	6	-	конечный номер

Const MSG_ERROR_PAYMENT = "Ошибка оплаты фискального чека"
Const MSG_ERROR_CASHIER = "Ошибка регистрации кассира"
Const MSG_ERROR_PRINTROW = "Ошибка печати строки фискального чека"
Const MSG_ERROR_NO_REPORT = "Отчет данным ЭККА не поддерживается"
Const MSG_ERROR_PRN_OPEN = "Ошибка доступа к принтеру"
Const MSG_ERROR_NO_COM = "Ошибка создания OLE/COM объекта"
Const MSG_ERROR_PRINT_OUT = "Ошибка печати чека выемки денег"
Const MSG_ERROR_PRINT_IN = "Ошибка печати чека внесения денег"
Const MSG_ERROR_OPEN_DRAWER = "Ошибка открытия денежного ящика"
Const MSG_ERROR_RESET_CHECK = "Ошибка аннулирования чека"
Const MSG_ERROR_PRINTROWART = "Артикул должен быть числом"
Const MSG_ERROR_DISCOUNT = "Ошибка печати скидки/наценки"

Const MSG_NO_SUPPPORT = "Функция для данного принтера не поддерживается"
Const MSG_BOX_CAPTION = "Печать фискального чека"

Const prmEntCashPrnName = "Наименование для ЭККА"

'---
'
'---
Sub PrintCash_DoPrintCheck(prm)
	Dim CashPrn, prmPrinter, prmData, Msc

	prmPrinter = prm(0)
	prmData = prm(1)

	Set Msc = prmPrinter(0)

	If IsNumeric(Msc.String2) Then
		Set CashPrn = PrintCash_Open(CLng(Msc.String2), Msc.Long1, prmPrinter)

		If Not CashPrn Is Nothing Then
			PrintCash_PrintCheck CashPrn, prmData
			PrintCash_Close CashPrn
			Set CashPrn = Nothing
		End If
	Else
		MsgBox "Номер порта должен быть числом", vbExclamation, MSG_BOX_CAPTION
	End If
End Sub
'---
'
'---
Sub PrintCash_DoPrintCheckRet(prm)
	Dim CashPrn, prmPrinter, prmData, Msc

	prmPrinter = prm(0)
	prmData = prm(1)

	Set Msc = prmPrinter(0)

	If IsNumeric(Msc.String2) Then
		Set CashPrn = PrintCash_Open(CLng(Msc.String2), Msc.Long1, prmPrinter)

		If Not CashPrn Is Nothing Then
			PrintCash_PrintCheckRet CashPrn, prmData
			PrintCash_Close CashPrn
			Set CashPrn = Nothing
		End If
	Else
		MsgBox "Номер порта должен быть числом", vbExclamation, MSG_BOX_CAPTION
	End If

End Sub

'---
'
'---
Function PrintCash_Open(PortNo, BoudRate, prmPrinter)
	Dim CashPrn, CashierName, Passw

	CashierName = prmPrinter(1)
	Passw = 0

	On Error Resume Next

	Set PrintCash_Open = Nothing
	Set CashPrn = CreateObject("ICSFP.ICS_EP_05")

	If Err.Number = 0 Then
		If CashPrn.FPInit(1, 9600, 3, 3) Then
			If CashPrn.FPSetCashier(0, "Кассир", 0, 0) Then
				Set PrintCash_Open = CashPrn
			Else
				MsgBox MSG_ERROR_CASHIER & vbNewLine & CashPrn.GetTextErrorMessage, vbCritical, MSG_BOX_CAPTION
			End If
		Else
			MsgBox MSG_ERROR_PRN_OPEN & vbNewLine & CashPrn.GetTextErrorMessage, vbCritical, MSG_BOX_CAPTION
		End If
	Else
		MsgBox MSG_ERROR_NO_COM & vbNewLine & Err.description & " (" & Err.Number & ")", vbCritical, MSG_BOX_CAPTION
	End If

End Function
'---
'
'---
Function PrintCash_PrintCheck(CashPrn, ByRef prm)
	Dim Op, TrNo, TrList, DepName, PaymentType, DicsSum
	Dim OneLinePrm

	PrintCash_PrintCheck = True

	Set Op = prm(0)
	TrNo = prm(1)
	PaymentType = 3	'prm(2)
	OneLinePrm = Array(CashPrn, prm(3))

	Set TrList = Op.TransList(TrNo)

	DepName = TrList.AgFromBind.Name

	TrList.EnumTrans GetRef("PrintCash_PrintOneLine"), OneLinePrm

	If Not CashPrn.GetLastCommandStatus Then

		DicsSum = Op.TransList(5).Sum * 100

		If DicsSum < 0 Then
			If Not CashPrn.FPDiscount(4, Abs(CLng(DicsSum)), "") Then
				PrintCash_PrintCheck = False
				MsgBox MSG_ERROR_DISCOUNT, vbCritical, MSG_BOX_CAPTION
				Exit Function
			End If
		ElseIf DicsSum > 0 Then
			If Not CashPrn.FPDiscount(5, CLng(DicsSum), "") Then
				MsgBox MSG_ERROR_DISCOUNT, vbCritical, MSG_BOX_CAPTION
				PrintCash_PrintCheck = False
				Exit Function
			End If
		End If

		If Not CashPrn.FPPayment(PaymentType, CLng(TrList.Sum * 100), False, True) Then
			MsgBox MSG_ERROR_PAYMENT, vbCritical, MSG_BOX_CAPTION
			PrintCash_PrintCheck = False
		Else
			Op.DocNo = CashPrn.GetSaleCheckNumber
		End If
	End If
End Function
'---
'
'---
Function PrintCash_PrintCheckRet(CashPrn, ByRef prm)
	Dim Op, TrNo, TrList, DepName, PaymentType
	Dim OneLinePrm

	PrintCash_PrintCheckRet = True

	Set Op = prm(0)
	TrNo = prm(1)
	PaymentType = 3	'prm(2)
	OneLinePrm = Array(CashPrn, prm(3))

	Set TrList = Op.TransList(TrNo)

	DepName = TrList.AgFromBind.Name

	TrList.EnumTrans GetRef("PrintCash_PrintOneLineRet"), OneLinePrm

	If Not CashPrn.GetLastCommandStatus Then
		If Not CashPrn.FPPayment(PaymentType, CLng(TrList.Sum * 100), False, True) Then
			MsgBox MSG_ERROR_PAYMENT, vbCritical, MSG_BOX_CAPTION
			PrintCash_PrintCheckRet = False
		Else
			Op.DocNo = CashPrn.GetPayCheckNumber
		End If
	End If
End Function
'---
'
'---
Function PrintCash_PrintOneLineRet(Tr, ByRef OneLinePrm)
	Dim EntName, CashPrn, IsDisc, Res

	Set CashPrn = OneLinePrm(0)
	IsDisc = OneLinePrm(1)

	EntName = Tr.EntBind.ParamString(prmEntCashPrnName)
	If EntName = "" Then EntName = Tr.EntBind.Name

	If IsDisc Then
		Res = CashPrn.FPPayMoney(CLng(Tr.Qty * 10), 1, 0, CLng(Tr.Params(prmTrPrice).Value2 * 100), 0, 0, EntName, CLng(Tr.EntBind.Nom))
	Else
		Res = CashPrn.FPPayMoney(CLng(Tr.Qty * 10), 1, 0, CLng(Tr.Price * 100), 0, 0, EntName, CLng(Tr.EntBind.Nom))
	End If

	If Res Then
		PrintCash_PrintOneLineRet = True
	Else
		MsgBox MSG_ERROR_PRINTROW & vbNewLine & CashPrn.GetTextErrorMessage, vbCritical, MSG_BOX_CAPTION
		PrintCash_PrintOneLineRet = False
	End If
End Function

'---
'
'---
Function PrintCash_PrintOneLine(Tr, ByRef OneLinePrm)
	Dim EntName, EntCode, Ent, CashPrn, IsDisc, Res

	Set CashPrn = OneLinePrm(0)
	IsDisc = OneLinePrm(1)

	EntName = Tr.EntBind.ParamString(prmEntCashPrnName)
	If EntName = "" Then EntName = Tr.EntBind.Name

	EntCode = Tr.EntBind.Nom

	If EntCode = "" Then 
		EntCode = PrintCash_GetNewCode("ent_nom", 5)
		Set Ent = Tr.Entity
		Ent.Nom = EntCode
		Ent.Save
	End If

	If IsNumeric(EntCode) Then
		If CashPrn.FPSale(CLng(Tr.Qty * 10), 1, 0, CLng(iif(IsDisc, Tr.Params(prmTrPrice).Value2, Tr.Price) * 100), 0, 0, EntName, CLng(EntCode)) Then
			PrintCash_PrintOneLine = True
		Else
			MsgBox MSG_ERROR_PRINTROW & vbNewLine & CashPrn.GetTextErrorMessage, vbCritical, MSG_BOX_CAPTION
			PrintCash_PrintOneLine = False
		End If
	Else
		MsgBox MSG_ERROR_PRINTROWART, vbCritical, MSG_BOX_CAPTION
		PrintCash_PrintOneLine = False
	End If
End Function
'---
'
'---
Function PrintCash_Close(CashPrn)
	PrintCash_Close = CashPrn.FPClose()
End Function
'---
'
'	prmData для печати чеков
'	0	-	вид отчета
'	1	-	тип отчета (сокращенный или развернутый)
'	2	-	выводить полный период
'	3	-	начало периода
'	4	-	конец периода
'	5	-	начальный номер
'	6	-	конечный номер
'
'---
Sub PrintCash_PrintReports(prm)
	Dim CashPrn, prmPrinter, prmData, Msc, IsErr

	prmPrinter = prm(0)
	prmData = prm(1)

	Set Msc = prmPrinter(0)

	Set CashPrn = PrintCash_Open(Msc.String2, Msc.Long1, prmPrinter)

	If Not CashPrn Is Nothing Then
		
		Select Case prmData(0)
			Case 1	'	x-report
				IsErr = CashPrn.FPDayReport(0)
	
			Case 2	'	z-report
				IsErr = CashPrn.FPDayClrReport(0)
	
			Case 3	'	report by art
				If prmData(1) Then
					IsErr = CashPrn.FPXArtReportExt(0, prmData(5), prmData(6))
				Else
					IsErr = CashPrn.FPXArtReport(0)
				End If
	
			Case 4	'	report by disount
				MsgBox MSG_NO_SUPPPORT, vbInformation, MSG_BOX_CAPTION
	
			Case 5	'	report by Date
				If prmData(1) Then
					IsErr = CashPrn.FPPeriodicReportShort(0, prmData(3), prmData(4))
				Else
					IsErr = CashPrn.FPPeriodicReport(0, prmData(3), prmData(4))
				End If
	
			Case 6	'	report by no
				If prmData(1) Then
					IsErr = CashPrn.FPPeriodicNumberReportShort(0, prmData(5), prmData(6))
				Else
					IsErr = CashPrn.FPPeriodicNumberReport(0, prmData(5), prmData(6))
				End If

			Case Else
				MsgBox MSG_NO_SUPPPORT, vbInformation, MSG_BOX_CAPTION
	
		End Select 

		PrintCash_Close CashPrn
	End If
End Sub
'---
'
'---
Sub PrintCash_PrintNullCheck(prm)
	MsgBox MSG_NO_SUPPPORT, vbInformation, MSG_BOX_CAPTION
End Sub
'---
'
'---
Sub PrintCash_PrintCheckOut(prm)
	Dim CashPrn, prmPrinter, prmData, Msc
	Dim Op

	prmPrinter = prm(0)
	prmData = prm(1)

	Set Msc = prmPrinter(0)

	Set CashPrn = PrintCash_Open(Msc.String2, Msc.Long1, prmPrinter)

	If Not CashPrn Is Nothing Then
		Set Op = prmData(0)
		If Not CashPrn.FPOutOfCash(Op.Sum * 100) Then
			MsgBox MSG_ERROR_PRINT_IN & vbNewLine & CashPrn.GetTextErrorMessage, vbCritical, MSG_BOX_CAPTION
		End If
	End If

End Sub
'---
'
'---
Sub PrintCash_PrintCheckIn(prm)
	Dim CashPrn, prmPrinter, prmData, Msc
	Dim Op

	prmPrinter = prm(0)
	prmData = prm(1)

	Set Msc = prmPrinter(0)

	Set CashPrn = PrintCash_Open(Msc.String2, Msc.Long1, prmPrinter)

	If Not CashPrn Is Nothing Then
		Set Op = prmData(0)
		If Not CashPrn.FPInToCash(Op.Sum * 100) Then
			MsgBox MSG_ERROR_PRINT_OUT & vbNewLine & CashPrn.GetTextErrorMessage, vbCritical, MSG_BOX_CAPTION
		End If
	End If

End Sub
'---
'
'---
Sub PrintCash_OpenCashDrawer(prm)
	Dim CashPrn, prmPrinter, prmData, Msc

	prmPrinter = prm(0)
	prmData = prm(1)

	Set Msc = prmPrinter(0)

	Set CashPrn = PrintCash_Open(Msc.String2, Msc.Long1, prmPrinter)

	If Not CashPrn Is Nothing Then
		If Not CashPrn.OpenBox() Then
			MsgBox MSG_ERROR_OPEN_DRAWER & vbNewLine & CashPrn.GetTextErrorMessage, vbCritical, MSG_BOX_CAPTION
		End If
	End If
End Sub
'---
'
'---
Function PrintCash_ResetCheck
	Dim CashPrn, prmPrinter, prmData, Msc

	prmPrinter = prm(0)
	prmData = prm(1)

	Set Msc = prmPrinter(0)

	Set CashPrn = PrintCash_Open(Msc.String2, Msc.Long1, prmPrinter)

	If Not CashPrn Is Nothing Then
		If Not CashPrn.ResetCheck() Then
			MsgBox MSG_ERROR_RESET_CHECK & vbNewLine & CashPrn.GetTextErrorMessage, vbCritical, MSG_BOX_CAPTION
		End If
	End If

End Function
'---
'
'---
Function PrintCash_GetNewCode(FieldName, FieldLen)
	Dim SQL, Rs, NewCode

	SQL = "Select Max(" & FieldName & ") FROM ENTITIES WHERE " & FieldName & " <> '' AND IsNumeric(" & FieldName & ") <> 0"
	Set Rs = GetRS(SQL)

	If Not Rs.eof Then
		NewCode = checknull(Rs.Fields(0).Value, 0) + 1
	Else
		NewCode = 1
	End If

	PrintCash_GetNewCode = NewCode		'com_strzero(NewCode, FieldLen)

End Function

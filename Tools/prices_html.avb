Option Explicit

'#include "HL74_XML.avb"
'#include "HL74_Const.avb"

Const MSG_BOX_CAPTION = "Печать ценников"

Dim MyCo
	Set MyCo = Workarea.MyCompany

Dim X_DIM, Y_DIM


Dim Op

Set Op = Workarea.Operation(75988)
 
Call Price_MakeHTMLPriceLists(Op.TransList(1), "st74_price_list_template.htm", "test_price.htm", True)

'---
'
'---
Function Price_MakeHTMLPriceLists(TrList, HTMLTemplate, PriceFileName, ShowPriceList)
	Dim oXml, TableNode, SampleNode, prm, NewNode, tNode, Rd

	Set RD = CreateLibObject("Redirect")
	HTMLTemplate = RD.GetFullPath(HTMLTemplate)
	PriceFileName = RD.GetFullPath(PriceFileName)

	If HTMLTemplate <> "" And HTMLTemplate <> "" Then

		Set oXml = New XML

		If oxml.Create() Then
			oXml.FileName = HTMLTemplate
	
			If oXml.Load() Then
				If Not oXml.IsError Then 
					Set tNode = oxml.GetTag("/html/body/div/table").item(0)
					Set SampleNode = tNode.ChildNodes.Item(0)

					X_DIM = checknull(tNode.GetAttribute("x_dim"), 5)
					Y_DIM = checknull(tNode.GetAttribute("y_dim"), 4)

					tNode.RemoveChild SampleNode
	
					prm = Array(0, oXml.xml, tNode, SampleNode, Empty)
					TrList.EnumTrans GetRef("Price_MakeOneCell"), prm
	
					oxml.xmlfilename = PriceFileName
					oxml.saveall
				End If
			End If
		End If
	
		Price_MakeHTMLPriceLists = Not oXml.IsError
		If oXml.IsError Then 
			MsgBox oXml.ErrorMsg, vbExclamation, MSG_BOX_CAPTION
		ElseIf ShowPriceList Then
			Call createlibobject("System").ShellExec(PriceFileName)
		End If
	Else
		Price_MakeHTMLPriceLists = False
		MsgBox "Не найдены файлы шаблона или файла с ценниками", vbCritical, MSG_BOX_CAPTION
	End If
End Function
'---
'
'---
Function Price_MakeOneCell(Tr, ByRef prm)
	Dim CellNode, PageBreak

	Price_MakeOneCell = True

	prm(0) = prm(0) + 1

'	If (((prm(0) - 1) \ (X_DIM * Y_DIM)) * (X_DIM * Y_DIM))= (prm(0) - 1) And prm(0) > 1 Then
'		Set PageBreak = prm(1).CreateElement("p")
'		PageBreak.SetAttribute "Class", "newpage"
'		prm(2).AppendChild PageBreak
'	End If

	If (((prm(0) - 1) \ X_DIM) * X_DIM)= (prm(0) - 1) Or prm(0) = 1 Then
		Set prm(4) = prm(1).CreateElement("tr")
		prm(2).AppendChild prm(4)
	End If

	Set CellNode = prm(1).CreateElement("td")
	prm(4).AppendChild CellNode

	CellNode.AppendChild Price_MakeNewNode(prm(1), prm(3), Tr)
End Function
'---
'
'---
Function Price_MakeNewNode(xml, SampleNode, Tr)
	Dim i, NewNode, NodeAttr

	Set NewNode = xml.CreateElement(SampleNode.NodeName)
	Set NodeAttr = SampleNode.Attributes

	For i = 0 To NodeAttr.Length - 1
		With NodeAttr.Item(i)
			NewNode.SetAttribute .Name, .Value
			If .Name = "text" Then NewNode.Text = .Value
			If .Name = "expr" Then NewNode.Text = NewNode.Text & Price_CalcExpr(.Value, Tr)
		End With
	Next
	
	For i = 0 To SampleNode.ChildNodes.Length - 1
		If SampleNode.ChildNodes.Item(i).NodeType = 1 Then
			NewNode.AppendChild Price_MakeNewNode(xml, SampleNode.ChildNodes.Item(i), Tr)
		End If
	Next

	Set Price_MakeNewNode = NewNode
End Function
'---
'
'---
Function Price_CalcExpr(Expr, Tr)
	Dim Res

	On Error Resume Next
	Expr = Replace(Expr, "'", Chr(34))
	Res = Eval(Expr)

	If Err.number <> 0 Then
		Res = Err.description
		Err.Clear
	End If

	Price_CalcExpr = Res
End Function
'---
'
'---
Function FMakeLab(BarCode)
	Dim db, rec_s, rec_d
	Dim var, StartSymb, DelimitSymb
	Dim Bar0, Bar1, Bar2, Bar3, Parity, Mask
	Dim codeLbl, FirstSymb, i

		Parity = Array(31, 20, 18, 17, 12, 6, 3, 10, 9, 5)
		Mask = Array(16, 8, 4, 2, 1)
		Bar0 = Array(Chr(35), Chr(36), Chr(37), Chr(38), Chr(39), Chr(40), Chr(41), Chr(42), Chr(43), Chr(44))
		Bar1 = Array(Chr(48), Chr(49), Chr(50), Chr(51), Chr(52), Chr(53), Chr(54), Chr(55), Chr(56), Chr(57))
		Bar2 = Array(Chr(65), Chr(66), Chr(67), Chr(68), Chr(69), Chr(70), Chr(71), Chr(72), Chr(73), Chr(74))
		Bar3 = Array(Chr(97), Chr(98), Chr(99), Chr(100), Chr(101), Chr(102), Chr(103), Chr(104), Chr(105), Chr(106))
		StartSymb = Chr(33)
		DelimitSymb = Chr(45)

		If Len(BarCode) > 12 Then BarCode = Left(BarCode, 12)

   	If Len(BarCode) < 13 Then			
       For i=Len(BarCode)+1 To 12 
				BarCode = "0" & BarCode
			Next
			
       FirstSymb = charat(BarCode, 1) 
       codeLbl = Bar0(FirstSymb) + StartSymb + Bar1(GetChar(BarCode, 2))
       For i = 0 To 4
            If (Parity(FirstSymb) And Mask(i)) > 0 Then
                codeLbl = codeLbl + Bar1(GetChar(BarCode, 3 + i))
            Else
                codeLbl = codeLbl + Bar2(GetChar(BarCode, 3 + i))
            End If
       Next 
       codeLbl = codeLbl + DelimitSymb + _
       Bar3(GetChar(BarCode, 8)) + Bar3(GetChar(BarCode, 9)) + _
       Bar3(GetChar(BarCode, 10)) + Bar3(GetChar(BarCode, 11)) + _
       Bar3(GetChar(BarCode, 12)) + Bar3(GetChecksum(BarCode)) + _
       StartSymb
		Else
			codeLbl = ""
		End If

	If Left(codeLbl, 1) = "'" Then codeLbl = "'" & codeLbl

	FMakeLab = codeLbl 
End Function
'---
'
'---
Function GetChar(Code,Num)
  	If IsNumeric(charat(Code, Num)) Then 
		GetChar = charat(Code, Num)
	Else
		Getchar = "0"
	End If		
End Function
'---
'
'---
Function GetChecksum(BarCode)
	Dim i
	Dim csumTotal :csumTotal = 0  
	For  i = 12 To 1  Step  - 1  
        If(( i - 1) Mod 2 = 0 ) Then
            csumTotal = csumTotal + CInt(GetChar(BarCode,i))
        Else
            csumTotal = csumTotal + (3 * CInt(GetChar(BarCode,i)))
    		 End If
   Next
    csumTotal = 10 - (csumTotal Mod 10)
    csumTotal = csumTotal Mod 10
    GetCheckSum = CStr(csumTotal) 
End Function
'---
'
'---

	